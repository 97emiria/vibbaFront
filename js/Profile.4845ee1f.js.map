{"version":3,"file":"js/Profile.4845ee1f.js","mappings":"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","sources":["webpack://app/./src/views/profileView.vue","webpack://app/./src/views/profileView.vue?6ecd"],"sourcesContent":["<template>\r\n  <div class=\"Profile maxWidthAndCenter\">\r\n    <Header />\r\n    <div class=\"spaceDivider\" />\r\n\r\n    <div class=\"headerFlex\">\r\n      <h1>Hey, {{ username }}!</h1>\r\n\r\n      <button @click=\"editUser()\" >\r\n        <img\r\n          src=\"../assets/iconSettings.png\"\r\n          alt=\"\"\r\n          id=\"btnOpen\"\r\n          title=\"Edit password\"\r\n        />\r\n        <img\r\n          src=\"../assets/iconClose.png\"\r\n          alt=\"\"\r\n          id=\"btnClose\"\r\n          class=\"hide\"\r\n          title=\"Close edit mode\"\r\n        />\r\n      </button>\r\n    </div>\r\n\r\n    <section class=\"passwordBox hide\" id=\"passwordBox\">\r\n      <section class=\"profileBox\">\r\n        <h2>Info:</h2>\r\n\r\n        <dl>\r\n          <dt>Username:</dt>\r\n          <dd>{{ username }}</dd>\r\n        </dl>\r\n\r\n        <dl>\r\n          <dt>E-mail:</dt>\r\n          <dd>{{ email }}</dd>\r\n        </dl>\r\n      </section>\r\n\r\n      <p class=\"error\" id=\"error\"></p>\r\n      <form @submit.prevent=\"updatePassword()\">\r\n        <label>Old password: </label>\r\n        <input type=\"password\" v-model=\"oldPassword\" />\r\n\r\n        <label>New password: </label>\r\n        <input type=\"password\" v-model=\"newPassword\" />\r\n\r\n        <label>Repeat new password: </label>\r\n        <input type=\"password\" v-model=\"repeatPassword\" />\r\n\r\n        <input type=\"submit\" value=\"Update password\" />\r\n      </form>\r\n      <br />\r\n      <hr />\r\n    </section>\r\n\r\n    <section>\r\n      <h2>My vibbz</h2>\r\n      <PostLayout\r\n        v-for=\"post in postsArr\"\r\n        :key=\"post\"\r\n        class=\"deleteBtnStyle\"\r\n        :postID=\"post._id\"\r\n        :textEl=\"post.text\"\r\n        :usernameEl=\"post.username\"\r\n        :emotionEl=\"post.emotion\"\r\n        :hashtagsEl=\"post.hashtags\"\r\n        :timestampEL=\"post.timestamp\"\r\n        :showDeleteBtn=\"true\"\r\n      />\r\n    </section>\r\n\r\n    <Message\r\n      :theMessage=\"resultMessage\"\r\n      :color=\"messageColor\"\r\n      :reveal=\"revealStatus\"\r\n    />\r\n\r\n    <!-- <Footer /> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Header from \"../components/Header.vue\";\r\nimport Footer from \"../components/Footer.vue\";\r\nimport Message from \"../components/Message.vue\";\r\nimport PostLayout from \"../components/PostLayout.vue\";\r\n\r\nexport default {\r\n  name: \"Profile\",\r\n\r\n  //Import components\r\n  components: {\r\n    Header,\r\n    Footer,\r\n    PostLayout,\r\n    Message,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      email: \"\",\r\n      postsArr: {},\r\n      oldPassword: \"\",\r\n      newPassword: \"\",\r\n      repeatPassword: \"\",\r\n      resultMessage: \"\",\r\n      messageColor: \"\",\r\n      revealStatus: \"none\",\r\n      errorColor: \"#f36a6a\",\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    getUserInfo() {\r\n      //Get id from sessionStorage\r\n      const userID = sessionStorage.getItem(\"userID\");\r\n\r\n      //Fetch to get user info\r\n      fetch(`http://localhost:3000/user/${userID}`, {\r\n        method: \"GET\",\r\n      }).then((response) => {\r\n        response.json().then((data) => {\r\n          this.username = data.username;\r\n          this.email = data.email;\r\n        });\r\n      });\r\n\r\n      //Fetch to get uses posts\r\n      fetch(`http://localhost:3000/posts/${userID}`, {\r\n        method: \"GET\",\r\n      }).then((response) => {\r\n        response.json().then((data) => {\r\n          this.postsArr = data;\r\n        });\r\n      });\r\n    },\r\n\r\n    getImgUrl(emotion) {\r\n      var images = require.context(\"../assets/moods\", false, /\\.png$/);\r\n      return images(\"./\" + emotion + \".png\");\r\n    },\r\n\r\n    editUser() {\r\n      var element = document.getElementById(\"passwordBox\");\r\n      element.classList.toggle(\"hide\");\r\n      var element = document.getElementById(\"btnClose\");\r\n      element.classList.toggle(\"hide\");\r\n      var element = document.getElementById(\"btnOpen\");\r\n      element.classList.toggle(\"hide\");\r\n\r\n      this.oldPassword = \"\"\r\n      this.newPassword = \"\"\r\n      this.repeatPassword = \"\"\r\n    },\r\n\r\n    updatePassword() {\r\n      document.getElementById(\"error\").innerHTML = \"\";\r\n      const userID = sessionStorage.getItem(\"userID\");\r\n\r\n      if (this.newPassword === this.repeatPassword) {\r\n        const updatePassword = {\r\n          oldPassword: this.oldPassword,\r\n          newPassword: this.newPassword,\r\n        };\r\n\r\n        //Fetch to get uses posts\r\n        fetch(`http://localhost:3000/user/${userID}`, {\r\n          method: \"PATCH\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(updatePassword),\r\n        }).then((response) => {\r\n          response.json().then((data) => {\r\n            if (response.ok) {\r\n              //Console checks\r\n              console.log(data.message);\r\n\r\n              //Print message out\r\n              this.resultMessage = \"Password is updated\";\r\n              this.messageColor = \"#c6ddc4\";\r\n              this.revealStatus = \"block\";\r\n\r\n              //Remove message after a while\r\n              setTimeout(() => {\r\n                this.resultMessage = \"\";\r\n                this.messageColor = \"white\";\r\n                this.revealStatus = \"none\";\r\n              }, 3000);\r\n\r\n              //Hide box again\r\n              var element = document.getElementById(\"passwordBox\");\r\n              element.classList.toggle(\"hide\");\r\n            } else {\r\n              this.resultMessage = data.message;\r\n              this.messageColor = this.errorColor;\r\n              this.revealStatus = \"block\";\r\n\r\n              //Remove message after a while\r\n              setTimeout(() => {\r\n                this.resultMessage = \"\";\r\n                this.messageColor = \"white\";\r\n                this.revealStatus = \"none\";\r\n              }, 3000);\r\n            }\r\n          });\r\n        });\r\n      } else {\r\n        this.resultMessage = \"New password dont match\";\r\n        this.messageColor = this.errorColor;\r\n        this.revealStatus = \"block\";\r\n\r\n        //Remove message after a while\r\n        setTimeout(() => {\r\n          this.resultMessage = \"\";\r\n          this.messageColor = \"white\";\r\n          this.revealStatus = \"none\";\r\n        }, 3000);\r\n      }\r\n    },\r\n  },\r\n\r\n  beforeMount() {\r\n    this.getUserInfo();\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped lang=\"scss\">\r\n.hide {\r\n  display: none;\r\n}\r\n\r\n.profileBox {\r\n  position: relative;\r\n}\r\n\r\n.headerFlex {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  button {\r\n    background-color: white;\r\n    border: none;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      transform: scale(0.9);\r\n    }\r\n\r\n    img {\r\n      width: 35px;\r\n      height: 35px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./profileView.vue?vue&type=template&id=7809b3a8&scoped=true\"\nimport script from \"./profileView.vue?vue&type=script&lang=js\"\nexport * from \"./profileView.vue?vue&type=script&lang=js\"\n\nimport \"./profileView.vue?vue&type=style&index=0&id=7809b3a8&scoped=true&lang=scss\"\n\nimport exportComponent from \"C:\\\\Users\\\\E-Hol\\\\Desktop\\\\Miun\\\\ProjectJS\\\\app\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7809b3a8\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","src","_imports_0","alt","id","title","_imports_1","_hoisted_4","_hoisted_5","type","value","_createElementBlock","_createVNode","_component_Header","_hoisted_2","_toDisplayString","$data","onClick","$options","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","onSubmit","_hoisted_13","$event","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_Fragment","_renderList","post","_createBlock","_component_PostLayout","key","postID","_id","textEl","text","usernameEl","username","emotionEl","emotion","hashtagsEl","hashtags","timestampEL","timestamp","showDeleteBtn","_component_Message","theMessage","color","reveal","name","components","Header","Footer","PostLayout","Message","data","email","postsArr","oldPassword","newPassword","repeatPassword","resultMessage","messageColor","revealStatus","errorColor","methods","getUserInfo","userID","sessionStorage","getItem","fetch","method","then","response","json","this","getImgUrl","images","require","editUser","element","document","getElementById","classList","toggle","updatePassword","innerHTML","headers","body","JSON","stringify","ok","console","log","message","setTimeout","beforeMount","__exports__","render"],"sourceRoot":""}